{"version":3,"sources":["components/Personr.js","App.js","reportWebVitals.js","index.js"],"names":["Personr","useState","personrdata","setPersnrData","getGender","personnummer","second_last_nr_str","substr","parseInt","useEffect","fetch","Math","floor","random","method","headers","Headers","Accept","then","res","json","response","results","console","log","catch","error","className","map","persnritem","index","testpersonnummer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEe,SAASA,IAGpB,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KAqBE,SAASC,EAAUC,GACb,IAAIC,EAAqBD,EAAaE,OAAO,GAAI,GAcjD,OAbqBC,SAASF,GAIT,IAAM,EAEhB,SAIA,SAMjB,OArCFG,qBAAU,WACNC,MAAM,+GAAD,OAC4GC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC/H,CACEC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnBC,OAAQ,uBAIXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJlB,EAAckB,EAASC,SACvBC,QAAQC,IAAIH,MAEbI,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,QAC7B,IAsBD,sBAAKC,UAAU,UAAf,UACI,+EAEA,wMAAqJ,0CAArJ,wDACA,6BAEKzB,EAAY0B,KAAK,SAACC,EAAYC,GAAb,OAAyB,mCAAmB1B,EAAUyB,EAAWE,kBAAxC,KAA6DF,EAAWE,mBAA/DD,QAKxD,iJACA,6BAAI,+DC5CDE,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC3B,EAAD,OCISiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.20d6626f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//\"homepage\": \"/personnummer\",\nexport default function Personr() {\n\n    //const [page, setPage] = useState(1);\n    const [personrdata, setPersnrData] = useState([]);\n\n    useEffect(() => {\n        fetch(\n          `https://skatteverket.entryscape.net/rowstore/dataset/b4de7df7-63c0-4e7e-bb59-1f156a591763?_limit=10&_offset=${Math.floor(Math.random() * 20000)}`,\n          {\n            method: \"GET\",\n            headers: new Headers({\n              Accept: \"application/json\"\n            })\n          }\n        )\n          .then(res => res.json())\n          .then(response => {\n            setPersnrData(response.results);\n            console.log(response);\n          })\n          .catch(error => console.log(error));\n      }, []);\n\n      //Returns the gender symbol from personnummer\n      function getGender(personnummer){\n            let second_last_nr_str = personnummer.substr(10, 1);\n            let second_last_nr = parseInt(second_last_nr_str);\n\n            let rstr = \"\"\n            // &#9794; &#9792; U+2640 U+2642\n            if (second_last_nr % 2 === 0){\n                //console.log(\"F\");\n                rstr = '\\u2640';\n            }\n            else {\n                //console.log(\"M\");\n                rstr = '\\u2642';\n            }\n\n            return rstr;\n      }\n    \n      return (\n        <div className=\"maindiv\">\n            <h1>Personnummer för test från Skatteverket</h1>\n           \n            <p>Här kan du hämta testpersonummer från Skatteverkets databas som kan användas till testning eller för övning i t.ex löne program som Visma. Du kan <b>skapa nya</b> personnummer genom att ladda om sidan: (Ctrl)+(r)</p> \n            <ul>\n                \n                {personrdata.map( (persnritem, index) => ( <li key={index} > {getGender(persnritem.testpersonnummer)}  {persnritem.testpersonnummer}</li>  )\n                    )    \n                }\n\n            </ul>\n            <p>Om näst sista siffran i personnummret är jämnt tillhör det en kvinna och är siffran udda en man. </p>\n            <h5><strong>&copy; Jens Lundeqvist</strong></h5>\n\n        </div>\n    )\n}\n","\nimport './App.css';\nimport Personr from \"./components/Personr\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Personr />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}